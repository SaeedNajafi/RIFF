#!/bin/bash

#SBATCH --job-name=prompt-experiments
#SBATCH --nodes=1
#SBATCH --ntasks=1
#SBATCH --tasks-per-node=1
#SBATCH --mem=8G
#SBATCH --cpus-per-task=4
#SBATCH --output=job_%x_%j.out
#SBATCH --error=job_%x_%j.err

# Note:
#	  ntasks: Total number of processes to use across world
#	  ntasks-per-node: How many processes each node should create
#		- If this is equal to the number of GPUs on the node, each GPU will run
#			a copy of the `srun ...` code
#		- `jax.distributed.initialize` requires that each GPU run a copy of the
#			code, in order to call initialize with no arguments

# Set location of host and access port
MAIN_HOST=$(hostname -s)
export MASTER_ADDR=$MAIN_HOST
export MASTER_PORT=52070

# Process input args
SCRIPT=$1

LOG_DIR=$2

LOG_PATH="${LOG_DIR}/log_${SLURM_JOB_ID}_rank_\${SLURM_PROCID}.log"

EXP_TYPE=$3

TASK=$4

SEED=$5

NUM_CLASSES=$6

FEWSHOT_SIZE=$7

# learning rate.
LR=$8

AUG=$9

TRAIN_PARA=${10}

LOAD_PARA=${11}

LEN=${12}

PARA_LOSS=${13}

SAMPLING_METHOD=${14}

SAMPLING_ALG=${15}

METRIC_TO_SAVE=${16}

KL_COEFFICIENT=${17}

PARA_MODEL_PATH=${18}

CLUSTER_NAME=${19}

echo "Placing logs in: ${LOG_DIR}"
echo "World size: ${SLURM_NTASKS}"
echo "Number of nodes: ${SLURM_NNODES}"
NUM_GPUs=$(nvidia-smi --query-gpu=name --format=csv,noheader | wc -l)
echo "GPUs per node: ${NUM_GPUs}"

# Make logging directories.
mkdir -p "${LOG_DIR}"

# Run on all nodes
/opt/slurm/bin/srun -N"${SLURM_NNODES}" -l \
    bash -c "bash ${SCRIPT} \
            CLUSTER_NAME=${CLUSTER_NAME} \
            EXP_TYPE=${EXP_TYPE} LR=${LR} \
            SEED=${SEED} TASK=${TASK} \
            LEN=${LEN} AUG=${AUG} \
            TRAIN_PARA=${TRAIN_PARA} LOAD_PARA=${LOAD_PARA} \
            PARA_LOSS=${PARA_LOSS} SAMPLING_METHOD=${SAMPLING_METHOD} \
            SAMPLING_ALG=${SAMPLING_ALG} SLURM_JOB_ID=${SLURM_JOB_ID} \
            METRIC_TO_SAVE=${METRIC_TO_SAVE} KL_COEFFICIENT=${KL_COEFFICIENT} \
            FEWSHOT_SIZE=${FEWSHOT_SIZE} NUM_CLASSES=${NUM_CLASSES} \
            PARA_MODEL_PATH=${PARA_MODEL_PATH} >> ${LOG_PATH} 2>&1"
